#!/bin/bash

###############################################################
#          jupyter/jupyterlab extensions/kernels              #
###############################################################

# sos installation
#python -m sos_notebook.install
#jupyter labextension install jupyterlab-sos --no-build 

# Beaker installation and extension
#beakerx install
#jupyter labextension install @jupyter-widgets/jupyterlab-manager --no-build 
#jupyter labextension install beakerx-jupyterlab --no-build 

# Git Jupyter/Lab extension 
jupyter labextension install @jupyterlab/git --no-build 
jupyter serverextension enable --py jupyterlab_git

# Jupyter/Lab extension for iframe/url https://github.com/timkpaine/jupyterlab_iframe
# jupyter labextension install jupyterlab_iframe --no-build 
# jupyter serverextension enable --py jupyterlab_iframe 

# Github Jupyter Lab extension
jupyter labextension install @jupyterlab/github --no-build 

# Draw.io Jupyter Lab extension
#jupyter labextension install jupyterlab-drawio --no-build 

# Rise Jupyter extension (presentation mode)
jupyter-nbextension install rise --py --sys-prefix
jupyter-nbextension enable  rise --py --sys-prefix

# Plotly Jupyter Lab extension
# jupyter labextension install @jupyterlab/plotly-extension --no-build 

# Table of contents Jupyter Lab Extension
jupyter labextension install @jupyterlab/toc --no-build 

# Jupyter/Jupyterlab extension for proxying internal applications
jupyter serverextension enable --sys-prefix jupyter_server_proxy
jupyter labextension install jupyterlab-server-proxy


# Building everything up
jupyter lab build --dev

###############################################################
#             moving to a local installation folder           #
###############################################################

mkdir ~/resources/local
cd    ~/resources/local

###############################################################
#             mongodb installation commands                   #
###############################################################

export MONGODB_VERSION=4.0.11
echo "export MONGODB_VERSION=${MONGODB_VERSION}" >> ~/.bashrc
echo "export MONGODB_VERSION=${MONGODB_VERSION}" >> ~/.profile

export MONGODB_HOME=$(pwd)/mongodb-${MONGODB_VERSION}
echo "export MONGODB_HOME=${MONGODB_HOME}"       >> ~/.bashrc
echo "export MONGODB_HOME=${MONGODB_HOME}"       >> ~/.profile


wget  http://downloads.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1804-${MONGODB_VERSION}.tgz -q  && \
tar -xvf mongodb-linux-x86_64-ubuntu1804-${MONGODB_VERSION}.tgz >/dev/null                          && \
rm       mongodb-linux-x86_64-ubuntu1804-${MONGODB_VERSION}.tgz                                     && \
mv       mongodb-linux-x86_64-ubuntu1804-${MONGODB_VERSION}        mongodb-${MONGODB_VERSION}      

# adding bin and sbin to $path
echo "export PATH=\$PATH:\$MONGODB_HOME/bin"  >> ~/.bashrc
echo "export PATH=\$PATH:\$MONGODB_HOME/bin"  >> ~/.profile

###############################################################
#             spark installation commands                   #
###############################################################

export SPARK_VERSION=2.4.5
echo "export SPARK_VERSION=${SPARK_VERSION}" >> ~/.bashrc
echo "export SPARK_VERSION=${SPARK_VERSION}" >> ~/.profile

export SPARK_HOME=$(pwd)/spark-${SPARK_VERSION}
echo "export SPARK_HOME=${SPARK_HOME}"       >> ~/.bashrc
echo "export SPARK_HOME=${SPARK_HOME}"       >> ~/.profile


wget http://ftp.unicamp.br/pub/apache/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz -q  && \
tar -xvf spark-${SPARK_VERSION}-preview2-bin-hadoop2.7.tgz >/dev/null                          && \
rm       spark-${SPARK_VERSION}-preview2-bin-hadoop2.7.tgz                                     && \
mv       spark-${SPARK_VERSION}-preview2-bin-hadoop2.7    spark-${SPARK_VERSION}

# adding bin and sbin to $path
echo "export PATH=\$PATH:\$SPARK_HOME/bin"  >> ~/.bashrc
echo "export PATH=\$PATH:\$SPARK_HOME/bin"  >> ~/.profile
echo "export PATH=\$PATH:\$SPARK_HOME/sbin"  >> ~/.bashrc
echo "export PATH=\$PATH:\$SPARK_HOME/sbin"  >> ~/.profile

export PYTHONPATH=${SPARK_HOME}/python
echo "export PYTHONPATH=${PYTHONPATH}" >> ~/.bashrc
echo "export PYTHONPATH=${PYTHONPATH}" >> ~/.profile

export PYTHONPATH=${SPARK_HOME}/python/lib/py4j-0.10.8.1-src.zip
echo "export PYTHONPATH=${PYTHONPATH}" >> ~/.bashrc
echo "export PYTHONPATH=${PYTHONPATH}" >> ~/.profile

export PYSPARK_DRIVER_PYTHON="jupyter"
echo "export PYSPARK_DRIVER_PYTHON=${PYSPARK_DRIVER_PYTHON}" >> ~/.bashrc
echo "export PYSPARK_DRIVER_PYTHON=${PYSPARK_DRIVER_PYTHON}" >> ~/.profile

export PYSPARK_DRIVER_PYTHON_OPTS="notebook"
echo "export PYSPARK_DRIVER_PYTHON_OPTS=${PYSPARK_DRIVER_PYTHON_OPTS}" >> ~/.bashrc
echo "export PYSPARK_DRIVER_PYTHON_OPTS=${PYSPARK_DRIVER_PYTHON_OPTS}" >> ~/.profile

export PYSPARK_PYTHON=python3
echo "export PYSPARK_PYTHON=${PYSPARK_PYTHON}" >> ~/.bashrc
echo "export PYSPARK_PYTHON=${PYSPARK_PYTHON}" >> ~/.profile

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
echo "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> ~/.bashrc
echo "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> ~/.profile

# adding bin and sbin to $path
echo "export PATH=\$PATH:\$JAVA_HOME/bin"  >> ~/.bashrc
echo "export PATH=\$PATH:\$JAVA_HOME/bin"  >> ~/.profile